package com.bt.nextgen.service.avaloq;

import com.bt.nextgen.service.avaloq.asset.aal.BrokerProductAssetResponseImpl;
import com.bt.nextgen.service.avaloq.broker.PartialInvalidationBrokerHolderImpl;
import com.bt.nextgen.service.avaloq.code.StaticCodeHolder;
import com.bt.nextgen.service.avaloq.product.AplResponseImpl;
import com.bt.nextgen.service.integration.termdeposit.asset.TermDepositRateResponseImpl;
import com.bt.nextgen.service.integration.termdeposit.product.TermDepositBaseProductResponseImpl;

public enum Template {

    TD_ASSET_RATES("BTFG$UI_FIDD_RATE_ASSET.IRC_LIST", TermDepositRateResponseImpl.class),
    TD_PRODUCT_RATES("BTFG$UI_FIDD_RATE_PROD.IRC_LIST", TermDepositBaseProductResponseImpl.class),
    STATIC_CODES("BTFG$UI_CODE_LIST.ALL#UI", StaticCodeHolder.class),
    SCHEDULED_TRANSACTION_LIST("BTFG$UI_SCD_TRX_LIST.BP#SCD_TRX_DET"),
    RECENT_10_TRANSACTION("BTFG$UI_BOOK_LIST.BP#CASH_LAST10_TRX"),
    // GET_NOTIFICATION_MESSAGES("BTFG$UI_NTFCN_LIST.NTFCN"),
    GET_NOTIFICATION_MESSAGES("btfg$ui_ntfcn_list.user#ntfcn"),
    UPDATE_NOTIFICATIONS("BTFG$COM.BTFIN.NTFCN_V1"),
    CLIENT_DETAILS("BTFG$UI_PERSON.PERSON#PERSON_DET"),
    FUND_PAYMENT_NOTICE("BTFG$UI_FUND_NOTICE.DOC#DET"),

    ACCOUNT("BTFG$UI_BP.BP#BP_DET"),
    ACCOUNT_V2("BTFG$UI_BP.BP#BP_DET_V2"),
    CLIENT_LIST("BTFG$UI_CUSTR_LIST.USER#CUSTR"),
    ACCOUNT_VALUATION("BTFG$UI_POS_LIST.BP#POS_VAL"),
    ACCOUNT_BALANCE_LIST("BTFG$UI_POS_LIST.ALL#BP_BAL"),
    ACCOUNT_BALANCE("BTFG$UI_POS_LIST.BP#BP_BAL"),
    AVAILABLE_CASH("BTFG$UI_POS_LIST.BP#AVL_CASH"),
    ACCOUNT_PERFORMANCE_QUARTERLY("BTFG$UI_PERF_LIST.BP#SMRY_LAST_QUAR"),
    ACCOUNT_PERFORMANCE_SUMMARY_LIST("BTFG$UI_PERF_LIST.BP#SMRY"),
    ACCOUNT_PERFORMANCE_SUMMARY_SINCE_INCEPTION("BTFG$UI_PERF_LIST.BP#SMRY_SINCE_INCEPT"),
    ACCOUNT_PERFORMANCE_SUMMARY_PRD("BTFG$UI_PERF_LIST.BP#SMRY_PRD"),
    ACCOUNT_PERFORMANCE_OVERALL("BTFG$UI_PERF_LIST.BP#PERF"),
    AVAILABLE_BENCHMARKS("BTFG$UI_BMRK_LIST.ALL"),
    SUBACCOUNT_PERFORMANCE_SUMMARY("BTFG$UI_PERF_LIST.CONT#SMRY"),
    SUBACCOUNT_PERFORMANCE_SINCE_INCEPTION_SUMMARY("BTFG$UI_PERF_LIST.CONT#SMRY_SINCE_INCEPT"),

    ADVISER_DASHBOARD_CURR_MONTH_PERFORMANCE("BTFG$UI_AVSR_DSHBRD.AVSR#LAST_30_DAYS"),
    ADVISER_DASHBOARD_CURR_QUARTER_PERFORMANCE("BTFG$UI_AVSR_DSHBRD.AVSR#CURR_QUAR"),
    ADVISER_DASHBOARD_CURR_YEAR_PERFORMANCE("BTFG$UI_AVSR_DSHBRD.AVSR#THIS_YEAR"),
    ADVISER_DASHBOARD_CURR_FINANCIAL_PERFORMANCE("BTFG$UI_AVSR_DSHBRD.AVSR#THIS_FY"),
    ADVISER_DASHBOARD_LAST_FINANCIAL_PERFORMANCE("BTFG$UI_AVSR_DSHBRD.AVSR#LAST_FY"),

    BROKER_HIERARCHY("BTFG$UI_OE_STRUCT.ALL#PERSON#HIRA", PartialInvalidationBrokerHolderImpl.class),
    BROKER_HIERARCHY_PARTIAL_INVALIDATION("BTFG$UI_OE_STRUCT.PERSON#PERSON#HIRA", PartialInvalidationBrokerHolderImpl.class),

    BROKER_PRODUCT_ASSETS("BTFG$UI_AAL_LIST.PROD_ASSET#ASSET", BrokerProductAssetResponseImpl.class),
    REALISED_CGT_DETAILS("BTFG$UI_CGT_REAL.BP#LOT_DET"),
    UNREALISED_CGT_DETAILS("BTFG$UI_CGT_UNREAL.BP#LOT_DET"),

    ASSET_DETAILS("BTFG$UI_ASSET_LIST.ALL#ASSET_DET"),
    SPECIALISED_ASSET_DETAILS("BTFG$UI_ASSET_LIST.ASSET#ASSET_DET"),

    ASSET_VALUATION("BTFG$TASK_ASSET_VAL.UI_ASSET_VAL"),
    HOLDINGS("TASK_POS_LIST.BTFG$UI_HOLD"),
    INCOME("BTFG$TASK_INCOME.UI_INCOME_DET"),
    TRANSACTIONS("BTFG$TASK_TRANSACTION.UI_TRANSACTION_DET"),
    ORDER_GROUP("BTFG$UI_DOC_LIST.BP#DOC"),
    ADVISER_ORDER_GROUP("BTFG$UI_DOC_LIST.AVSR#BP_DOC"),
    ADVISER_TERM_DEPOSIT("BTFG$UI_POS_LIST.OE#BP_POS_FIDD"),
    CLIENT_TERM_DEPOSIT("BTFG$UI_POS_LIST.BP#POS#FIDD"),

    ACCOUNT_LIST("BTFG$UI_BP_LIST.ALL#CUSTR"),
    ACCOUNTS_SEARCH("BTFG$UI_BP_LIST.CUSTR#CUSTR"),
    ACCOUNT_LIST_ONLINE("BTFG$UI_BP_LIST.ONLINE_APRV#CUSTR"),
    ACCOUNT_LIST_GCM("BTFG$UI_BP_LIST.GCM#CUSTR"),

    CONT_BP_LIST("BTFG$UI_CONT_LIST.ALL#CUSTR"),
    PERSON_LIST("BTFG$UI_PERSON_LIST.ALL#INVSTR"),
    PERSON_LIST_INVSTR("BTFG$UI_PERSON_LIST.INVSTR#INVSTR"),
    PERSON_LIST_INVSTR_FLAT("BTFG$UI_PERSON_LIST.USER#INVSTR_FLAT"),

    ORDER("BTFG$UI_DOC_LIST.DOC#INVST_STATUS"),
    ORDERS("BTFG$UI_DOC_LIST.OE#INVST_STATUS"),
    ORDERS_ACCOUNT("BTFG$UI_DOC_LIST.BP#INVST_STATUS"),
    ORDER_V1("BTFG$UI_BOOK_LIST.DOC#INVST_STATUS"),
    ORDERS_V1("BTFG$UI_BOOK_LIST.AVSR#INVST_STATUS"),
    ORDERS_ACCOUNT_V1("BTFG$UI_BOOK_LIST.BP#INVST_STATUS"),
    ORDERS_IN_PROGRESS("BTFG$UI_BOOK_LIST.BP#INVST_IN_PROGRESS"),
    ORDERS_TRANSACTION_DATA("BTFG$UI_DOC_LIST.DOC#CONTR_NOTES"),

    // MANAGED_PORTFOLIO_PRODUCTS("btfg$web_ui_managedportfolio.flat_rep_DG"),
    INDUSTRY_SECTORS("BTFG$TASK_IND_SECTOR.UI_IND_SECTOR_DET"),
    REALISED_CGT("BTFG$TASK_REALISED_CGT_LIST.UI_REALISEDCGT_DET"),
    UNREALISED_CGT("BTFG$TASK_UNREALISED_CGT_LIST.UI_UNREALISEDCGT_DET"),
    FEEDBACK_REFERENCE_ID("BTFG$COM.BTFIN.TRXSVC_CRM_ISS"),
    FEEDBACK_TRACK_DET("TASK_DOC_CRM_ISSUE.BTFG$UI_COMPLAINTS"),
    YEARLY_FEES("BTFG$UI_BOOK_LIST.BP#POS#CACC_FEE_AVSR_ADVCONEOFF_LAST_YEAR"),
    FEE_SCHEDULE("BTFG$UI_FEE.BP#FEE_SCHEDULE"),
    ONEOFF_ADVICE_FEES_TRANSACTION("BTFG$COM.BTFIN.TRXSVC_ADV_FEE_V1"),
    CONT_LIST("TASK_CONT_LIST.BTFG$UI_FEE_SCHEDULE_IM"),
    IPS_LIST("BTFG$UI_IPS_LIST.ALL#IPS_DET"),
    IPS_INVST_OPT("BTFG$UI_PROD_LIST.USER#IPS_INVST_OPT_DET"),
    FEE_SCHEDULE_ADV("TASK_OBJ.BTFG$UI_FEE_SCHEDULE_ADV"),
    TRANSACTION_HISTORY("BTFG$UI_BOOK_LIST.BP#ALL_TRX"),
    PORTFOLIO_PERFORMANCE("BTFG$TASK_PERFORMANCE_LIST.UI_PERFORMANCE"),
    MODEL_PORTFOLIOS_SUMMARY("BTFG$UI_POS_LIST.IM#IPS_AUM"),
    MODEL_PORTFOLIOS_HEADER_BULK("BTFG$UI_IPS_LIST.IM#IM_REP_HDR"),
    MODEL_PORTFOLIOS_HEADER_SINGLE("BTFG$UI_IPS_LIST.IPS#IM_REP_HDR"),
    MODEL_PORTFOLIOS_CASH_FORECASTING_BULK("BTFG$UI_POS_LIST.IM#IPS_SHDW_MP_CASH"),
    MODEL_PORTFOLIOS_CASH_FORECASTING_SINGLE("BTFG$UI_POS_LIST.IPS#SHDW_MP_CASH"),
    MODEL_PORTFOLIOS_SHADOW_PORTFOLIO_BULK("BTFG$UI_POS_LIST.IM#IPS_ALLOC"),
    MODEL_PORTFOLIOS_SHADOW_PORTFOLIO_SINGLE("BTFG$UI_POS_LIST.IPS#ALLOC"),
    MODEL_PORTFOLIOS_SHADOW_TRANSACTIONS_BULK("BTFG$UI_BOOK_LIST.IM#SHDW_MP_LAST_20V_TRX"),
    MODEL_PORTFOLIOS_SHADOW_TRANSACTIONS_SINGLE("BTFG$UI_BOOK_LIST.IPS#SHDW_MP_LAST_20V_TRX"),
    INCOME_RECEIVED("BTFG$UI_CASH_RECV_LIST.BP#TRX"),
    CASH_DIVIDEND("BTFG$UI_SECTRX_LIST.BP#CASH_DIV_TRX"),
    NOTIFICATIONS_COUNT_UNREAD("BTFG$TASK_NTFCN.UI_NTFCN_UNREAD"),
    ACC_ACTIV_STATUS("BTFG$UI_DOC_CUSTR_LIST.DOC#DOC"),
    GET_NOTIFICATION_COUNT_UNREAD("btfg$ui_ntfcn_list.user#unread_cnt"),
    ADVISOR_PRODUCTS("BTFG$UI_APL_LIST.ALL#PROD", AplResponseImpl.class),
    PRODUCTS("BTFG$UI_PROD_LIST.ALL#PROD_DET"),
    USER_INFORMATION("BTFG$UI_USER.USER#USER_DET"),
    VALUATION_MOVEMENT("BTFG$UI_PERF_CF_LIST.BP#PORTF_MVT"),
    CASH_PAST_TRANSACTIONS("BTFG$UI_BOOK_LIST.BP#CASH_TRX"),
    CASH_RECENT_PAST_TRANSACTIONS("BTFG$UI_BOOK_LIST.BP#CASH_LAST10_TRX"),
    CASH_CONTRIBUTIONS_FOR_BP("BTFG$UI_CASH_CAT.BP#CAT"),
    CASH_CONTRIBUTIONS_FOR_DOC("BTFG$UI_CASH_CAT.DOC#CAT"),
    CONTRIBUTIONS_CAPS("BTFG$UI_CASH_CAT.BP#CAPS"),
    SUPER_CONTRIBUTIONS_CAPS("BTFG$TASK_BP_LIST.SA_CAP"),
    SUPER_CONTRIBUTIONS_HISTORY("BTFG$UI_AU_TAX.SA_CONTRI"),
    ACC_ACTIV_STATUS_BP("BTFG$UI_DOC_CUSTR_LIST.BP#DOC"),
    APPLICATION_DOCUMENT_DETAILS("BTFG$UI_DOC_CUSTR_LIST.BP#DOC_DET"),
    APPLICATION_DOCUMENT_DETAILS_CUSTOMER("BTFG$UI_DOC_CUSTR_LIST.PERSON#DOC_DET"),
    ACC_ACTIV_STATUS_DIRECT("BTFG$UI_DOC_CUSTR_LIST.PERSON#DOC"),
    TAX_INVOICE("BTFG$UI_BOOK_LIST.BP#FEE_AVSR_EVT#GST_LAST_MONTH"),
    PORTFOLIOVALUE_BY_BAND("BTFG$UI_PERF_LIST.AVSR#DSHBRD_PV_BAND"),
    TOP_ACCOUNTS_CASH("BTFG$UI_PERF_LIST.AVSR#DSHBRD_TOP_BP_BY_CASH"),
    TOP_ACCOUNTS_PORTFOLIO("BTFG$UI_PERF_LIST.AVSR#DSHBRD_TOP_BP_BY_VAL"),
    STATIC_FUNCTIONAL_ROLE("BTFG$UI_SEC_USER_LIST.USER_ROLE#FUNCT_ROLE"),
    JOB_PROFILE_LIST("BTFG$UI_SEC_USER_LIST.MY#JOB_USER"),
    BANK_DATE("BTFG$UI_BASE.ALL#SYSTEM_DET"),
    CHESS_PARAMETER("BTFG$UI_BP_LIST.SETTLE#BP_CP"),
    BACKGROUND_PROCESS("TASK_OBJ_BGP.ALL#BGP"),
    JOB_PROFILE_LIST_FOR_USER("BTFG$UI_SEC_USER_LIST.LOOKUP#JOB_USER"),
    PAYEE_DETAILS("BTFG$UI_BP.BP#PAY_DET"),
    CASH_RATE_HISTORY("BTFG$UI_INTR_RATE.ASSET#HIST"),
    CORPORATE_ACTIONS_VOLUNTARY("BTFG$UI_SECEVT_LIST_RSP_MNGT.AVSR#DECSN_DOC"),
    CORPORATE_ACTIONS_MANDATORY("BTFG$UI_SECEVT_LIST_RSP_MNGT.AVSR#MAND_DOC"),
    CORPORATE_ACTIONS_VOLUNTARY_SUPER("BTFG$UI_SECEVT_LIST_RSP_MNGT.SA_ACC#AVSR#DECSN_DOC"),
    CORPORATE_ACTIONS_MANDATORY_SUPER("BTFG$UI_SECEVT_LIST_RSP_MNGT.SA_ACC#AVSR#MAND_DOC"),
    CORPORATE_ACTIONS_VOLUNTARY_TRUSTEE("BTFG$UI_SECEVT_LIST_RSP_MNGT.TRUSTEE#DECSN_DOC"),
    CORPORATE_ACTION_DETAILS("BTFG$UI_DOC_SECEVT.DOC#DESCN_DOC"),
    CORPORATE_ACTION_ACCOUNTS("BTFG$UI_SECEVT_POSLIST.DOC#TRIG_POS_LIST"),
    CORPORATE_ACTION_PARTICIPATION("BTFG$UI_DOC_SECTRX.DOC#ALL_TRX"),
    CORPORATE_ACTIONS_VOLUNTARY_IM("BTFG$UI_SECEVT_LIST_RSP_MNGT.IM#DECSN_DOC"),
    CORPORATE_ACTIONS_MANDATORY_IM("BTFG$UI_SECEVT_LIST_RSP_MNGT.IM#MAND_DOC"),
    CORPORATE_ACTION_ACCOUNTS_IM("BTFG$UI_SECEVT_POSLIST.DOC#IM_OE#TRIG_POS_LIST"),
    CORPORATE_ACTION_PARTICIPATION_IM("BTFG$UI_DOC_SECTRX.DOC#IM_OE#ALL_TRX"),
    CORPORATE_ACTION_PENDING_COUNT("BTFG$UI_SECEVT_LIST_RSP_MNGT.BP#COAC_ITEM_CNT"),
    CORPORATE_ACTIONS_DRP_LIST("BTFG$UI_SECEVT_LIST_RSP_MNGT.BP_ASSET_LIST#DRIP_DOC"),
    REGULAR_INVESTMENTS_ADVISOR("BTFG$UI_TRX_BDL_LIST.RECUR_OWNER_DOC"),
    REGULAR_INVESTMENTS_ACCOUNT("BTFG$UI_TRX_BDL_LIST.RECUR_BP_DOC"),
    TRANSACTION_FEES("btfg$ui_fee.all#costp_cost"),
    LICENSE_ADVISER_FEE("btfg$ui_fee.bp#fee_schedule_laf_fee"),
    MODEL_PORTFOLIOS_REBALANCE_SUMMARY("btfg$ui_doc_rebal_trig.im#doc"),
    TRANSFER("BTFG$UI_DOC_LIST.DOC#XFER_STATUS"),
    ADVISER_TRANSFER("BTFG$UI_DOC_LIST.OE#XFER_STATUS"),
    CLIENT_TRANSFER("BTFG$UI_DOC_LIST.BP#XFER_STATUS"),
    UAR_DOC("BTFG$UI_DOC_UAR.DOC#AWAIT_DECSN"),
    SUPER_VIEW_BENEFICIARIES("BTFG$UI_BP.SA_BENEF_DET"),
    SUPER_PERSONAL_TAX_DEDUCTION_NOTICE("BTFG$UI_AU_TAX.SA_DEDUCT_NOTICE"),
    SUPER_PENSION_COMMENCEMENT_STATUS("BTFG$UI_DOC_AU_SA.PENS_COMMENCE"),
    HOLDING_BREACH_REPORT("BTFG$UI_RESTR_LIST.AVSR#RESTR"),
    SAVED_DEPOSITS("BTFG$UI_DOC_LIST.DOC#HOLD_INPAY"),
    SAVED_PAYMENTS("BTFG$UI_DOC_LIST.DOC#HOLD"),
    MATCH_TFN("BTFG$COM.BTFIN.TRXSVC_DATA_VALID_V1");
   
    private String templateName;
    private Class className;

    private Template(String templateName) {

        this.templateName = templateName;
    }

    public String getName() {
        return templateName;
    }

    public Class<?> getClassName() {
        return className;
    }

    private Template(String templateName, Class<?> className) {
        this.templateName = templateName;
        this.className = className;
    }

    public static Class<?> getClassNameByString(String code) {
        for (Template e : Template.values()) {
            if (code.equalsIgnoreCase(e.templateName))
                return e.getClassName();
        }
        return null;
    }

}
