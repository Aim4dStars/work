package com.bt.nextgen.api.draftaccount.model.form;

import com.bt.nextgen.api.client.model.AddressDto;
import com.bt.nextgen.service.integration.domain.Gender;

import javax.xml.datatype.XMLGregorianCalendar;
import java.util.List;


/**
 * Created by m040398 on 14/03/2016.
 */
@SuppressWarnings("squid:S1452")
public interface IPersonDetailsForm extends ICorrelated, ITaxDetailsForm, ICrsTaxDetailsForm {

    boolean hasPostalAddress();

    IAddressForm getPostalAddress();

    String getTitle();

    void setTitle(String title);

    String getFirstName();

    void setFirstName(String firstName);

    String getMiddleName();

    void setMiddleName(String middleName);

    String getLastName();

    void  setLastName(String lastName);

    String getPreferredName();

    void setPreferredName(String preferredName);

    String getAlternateName();

    boolean hasGender();

    Gender getGender();

    void setGender(String gender);

    String getGenderAsString();

    void setGcmUpdated(boolean value);

    boolean isGcmUpdated();

    XMLGregorianCalendar getDateOfBirthAsCalendar();

    String getDateOfBirth();

    void setDateOfBirth(String dateofBirth);

    IAddressForm getResidentialAddress();

    void updateResidentialAddress(AddressDto address);

    void updatePostalAddress(AddressDto address);

    boolean hasResidentialAddress();

    boolean hasHomeNumber();

    IContactValue getHomeNumber();

    boolean hasWorkNumber();

    IContactValue getWorkNumber();

    boolean hasEmail();

    IContactValue getEmail();

    void removeEmail();

    void removeMobile();

    boolean hasSecondaryEmailAddress();

    IContactValue getSecondaryEmailContact();

    boolean hasMobile();

    IContactValue getMobile();

    boolean hasSecondaryMobileNumber();

    IContactValue getSecondaryMobile();

    IContactValue getContactValue(String type);

    void removeContactValue(String type);

    boolean isIdVerified();

    void setIdVerified(boolean idVerified);

    boolean hasIdVerified();

    IIdentityVerificationForm getIdentityVerificationForm();

    /**
     * If we have a key which is not NULL it means it's an existing Panorama investor
     *
     * @return
     */
    String getClientKey();

    public void setClientKey(String clientKey);

    public void setRegistered(boolean registered);


    /**
     * Check if it's a Panorama existing investor
     *
     * @return
     */
    boolean isExistingPerson();

    /**
     * Checks if it's a GCM retrieved person but not registered to Panorama
     *
     * @return
     */
    boolean isGcmRetrievedPerson();

    /**
     * This field represents Avaloq identification id and is populated when customer is existing panorama.<br>
     * For historical reason the corresponding property name in customerSchema is 'gcmId' but it has nothing to do with GCM.<br>
     *
     * <b>History: </b> <br>
     * <i> Initially, Avaloq was supposed to use the key generated by GCM as its own key. But GCM integration didnt happen as expected and Avaloq was already calling its external key as GCM ID. UI developers used both the terms GCM Pan (GCM Panoram number) and GCM Id.
     Later GCM integration happened. Now to differentiate the GCM PAN and actual ID created by GCM, the name suggested was 'Z' number and you can hear some architects/solution designers still trying to call it as Z number. But the Avaloq term for the same is GCM Customer Number.
     So, GCM ID is actually Avaloq's external ID or to avoid confusion, we could use the term used by solution designers - Panorama Number.</i><br>
     *
     *
     * @return Panorama Number for existing investor
     */
    String getPanoramaNumber(); //TODO: rename the corresponding field in customerSchema.json (gcmId -> panoramaNumber)

    public void setPanoramanumber(String gcmId);

    boolean hasSourceOfWealth();

    String getSourceOfWealth();

    String getAdditionalSourceOfWealth();

    /**
     * the CIS key for existing GCM
     * @return
     */
    String getCisId();

    /**
     * @deprecated  TODO: remove this method after all apps are converted to support JSON schemas
     *
     * @return
     */
    @Deprecated
    List<?> getAddresses();

    /**
     * @deprecated  TODO: remove this method after all apps are converted to support JSON schemas
     *
     * @return
     */
    @Deprecated
    void setAddresses(List<?> addresses);

    /**
     * @deprecated  TODO: remove this method after all apps are converted to support JSON schemas
     *
     * @return
     */
    @Deprecated
    IAddressForm getGCMRetAddresses();

    List<?> getEmails();

    void setEmails(List<?> emails);

    List<?> getPhones();

    void setPhones(List<?> phones);

    String getFormerName();

    IPlaceOfBirth getPlaceOfBirth();

    String getUserName();

    String getPreferredContact();

    void removePreferredContact();

    void removeContactDetails();

    boolean hasJsonSchema();

    boolean hasOtherNumber();

    IContactValue getOtherNumber();

    String getTaxoption();

    String getIsForeignRegistered();

    void setIsForeignRegistered(String isForeignRegistered);

    void setIsOverseasTaxRes(Boolean isOverseasTaxRes);

    public Boolean getIsOverseasTaxRes();
}
