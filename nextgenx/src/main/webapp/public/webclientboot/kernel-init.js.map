{"version":3,"sources":["webpack:///kernel-init.js","webpack:///webpack/bootstrap ca3b55a0305fb7453391","webpack:///./src/app/init/main.js","webpack:///./~/ui-salad/src/aws-initialiser/index.js","webpack:///./~/loglevel/lib/loglevel.js","webpack:///./src/ui-config/production.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_awsInitialiser","_awsInitialiser2","_config","log","getLogger","git","sha","branch","info","window","cloudConfig","init","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_loglevel","_loglevel2","noop","AwsInitialiser","win","config","this","$win","$doc","document","_this","ts","Date","getTime","settingsUrl","envParamUrl","ajaxGet","parameters","pathParts","push","cloudBaseUrl","envPiece","location","href","match","formalEnvironmentName","cloudSettingsFilePath","scriptBasePath","join","settings","loadStyleSheets","loadScripts","errorMsg","loadMsgBox","getElementsByClassName","innerHTML","alert","url","_this2","success","arguments","undefined","error","showGeneralError","request","XMLHttpRequest","open","onload","status","json","JSON","parse","responseText","e","Error","onerror","send","src","_this3","callback","s","createElement","async","callbackComplete","onreadystatechange","state","readyState","test","body","appendChild","name","extension","scriptBaseUrl","versionParam","setVersionParam","path","decodeURIComponent","map","replace","styles","rel","getElementsByTagName","_this4","forEach","loadStyleSheet","buildPath","_this5","scripts","loadScript","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","root","definition","realMethod","methodName","console","undefinedType","bindMethod","method","bind","Function","apply","enableLoggingWhenConsoleArrives","level","loggerName","replaceLoggingMethods","logMethods","methodFactory","defaultMethodFactory","Logger","defaultLevel","factory","persistLevelIfPossible","levelNum","levelName","toUpperCase","localStorage","storageKey","ignore","cookie","encodeURIComponent","getPersistedLevel","storedLevel","indexOf","exec","slice","self","levels","currentLevel","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","getLevel","setLevel","persist","setDefaultLevel","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","logger","_log","noConflict","defaultAppId","apps","baseUrl","chrome","routeMap","appId","pattern","modifier"],"mappings":"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","file":"kernel-init.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _awsInitialiser = __webpack_require__(1);\n\t\n\tvar _awsInitialiser2 = _interopRequireDefault(_awsInitialiser);\n\t\n\tvar _config = __webpack_require__(3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar log = __webpack_require__(2).getLogger('ui-kernel-init');\n\t\n\tvar git = ({\"sha\":\"7ddc72dd3513710b255a6f0cb9f21787c59db661\",\"branch\":\"master\"}) || {};\n\tlog.info('ui-kernel ' + git.sha + ' (' + git.branch + ')');\n\t\n\tnew _awsInitialiser2.default(window, _config.cloudConfig).init();\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _loglevel = __webpack_require__(2);\n\t\n\tvar _loglevel2 = _interopRequireDefault(_loglevel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar noop = function noop() {};\n\t\n\tvar AwsInitialiser = function () {\n\t  function AwsInitialiser(win, config) {\n\t    _classCallCheck(this, AwsInitialiser);\n\t\n\t    this.$win = win;\n\t    this.$doc = win.document;\n\t    this.config = config;\n\t  }\n\t\n\t  _createClass(AwsInitialiser, [{\n\t    key: 'init',\n\t    value: function init() {\n\t      var _this = this;\n\t\n\t      var ts = new Date().getTime();\n\t      _loglevel2.default.info('Load bootstrap parameters from S3', this.config);\n\t      var settingsUrl = this.config.envParamUrl + '?ts=' + ts;\n\t      this.ajaxGet(settingsUrl, function (parameters) {\n\t        var pathParts = [];\n\t        pathParts.push(_this.config.cloudBaseUrl);\n\t        var envPiece = _this.$win.location.href.match(/setEnv=([a-z0-9]+)/i);\n\t        if (envPiece && envPiece.length >= 2) {\n\t          pathParts.push(envPiece[1]);\n\t        } else {\n\t          pathParts.push(parameters.formalEnvironmentName);\n\t        }\n\t\n\t        pathParts.push(_this.config.cloudSettingsFilePath);\n\t\n\t        var scriptBasePath = pathParts.join('/');\n\t        _this.ajaxGet(scriptBasePath + '?ts=' + ts, function (settings) {\n\t          _this.loadStyleSheets(_this.config.cloudBaseUrl, settings);\n\t          _this.loadScripts(_this.config.cloudBaseUrl, settings);\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'showGeneralError',\n\t    value: function showGeneralError() {\n\t      var errorMsg = '<div class=\"response-message alert  message-alert-dynamic\" role=\"alert\" style=\"margin-top: 20px\">\\n                        <span class=\"icon-container-outer\">\\n                          <span class=\"icon-container default\">\\n                              <span class=\"icon icon-notification-fail\" aria-hidden=\"true\"></span>\\n                          </span>\\n                        </span>\\n                        <span class=\"message\"><p>We seem to be having some technical difficulties. Please reload this page or try again later.</p></span>\\n                      </div>';\n\t\n\t      var loadMsgBox = this.$win.document.getElementsByClassName('loading-message')[0];\n\t\n\t      if (loadMsgBox) {\n\t        loadMsgBox.innerHTML = errorMsg;\n\t      } else {\n\t        this.$win.alert(errorMsg);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'ajaxGet',\n\t    value: function ajaxGet(url) {\n\t      var _this2 = this;\n\t\n\t      var success = arguments.length <= 1 || arguments[1] === undefined ? noop : arguments[1];\n\t      var error = arguments.length <= 2 || arguments[2] === undefined ? function () {\n\t        _this2.showGeneralError();\n\t      } : arguments[2];\n\t\n\t      var request = new this.$win.XMLHttpRequest();\n\t      request.open('GET', url, true);\n\t      request.onload = function () {\n\t        if (request.status >= 200 && request.status < 400) {\n\t          var json = void 0;\n\t          try {\n\t            json = JSON.parse(request.responseText);\n\t          } catch (e) {\n\t            json = request.responseText.match(/\\{.+\\}/);\n\t            if (json) {\n\t              json = JSON.parse(json);\n\t            } else {\n\t              throw new Error('Could not parse response: ' + request.responseText);\n\t            }\n\t          }\n\t\n\t          success(json);\n\t        } else {\n\t          // We reached our target server, but it returned an error\n\t          error();\n\t        }\n\t      };\n\t\n\t      request.onerror = error;\n\t      request.send();\n\t    }\n\t  }, {\n\t    key: 'loadScript',\n\t    value: function loadScript(src) {\n\t      var _this3 = this;\n\t\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? noop : arguments[1];\n\t\n\t      _loglevel2.default.info('Load script from URL:', src);\n\t      var s = this.$doc.createElement('script');\n\t      s.src = src;\n\t      s.async = false;\n\t      s.onerror = function () {\n\t        return _this3.showGeneralError();\n\t      };\n\t\n\t      var callbackComplete = false;\n\t      s.onreadystatechange = s.onload = function () {\n\t        var state = s.readyState;\n\t        if (!callbackComplete && (!state || /loaded|complete/.test(state))) {\n\t          callbackComplete = true;\n\t          callback();\n\t        }\n\t      };\n\t\n\t      this.$doc.body.appendChild(s);\n\t    }\n\t  }, {\n\t    key: 'buildPath',\n\t    value: function buildPath(name, extension, scriptBaseUrl, settings) {\n\t      var pathParts = [];\n\t      var versionParam = this.$win.location.href.match(this.config.setVersionParam);\n\t\n\t      if (scriptBaseUrl) pathParts.push(scriptBaseUrl);\n\t\n\t      if (settings.path) {\n\t        if (versionParam && versionParam.length >= 2) {\n\t          settings.path = decodeURIComponent(versionParam[1]); // override version with pram value\n\t        }\n\t\n\t        pathParts.push(settings.path);\n\t      }\n\t\n\t      pathParts.push('' + name + extension);\n\t\n\t      return pathParts.map(function (p, i) {\n\t        return i === 0 ? p.replace(/\\/+$/, '') : p.replace(/^\\/+|\\/+$/g, '');\n\t      }).join('/');\n\t    }\n\t  }, {\n\t    key: 'loadStyleSheet',\n\t    value: function loadStyleSheet(src) {\n\t      _loglevel2.default.info('Load style from URL:', src);\n\t      var styles = this.$doc.createElement('link');\n\t      styles.rel = 'stylesheet';\n\t      styles.href = src;\n\t      this.$doc.getElementsByTagName('head')[0].appendChild(styles);\n\t    }\n\t  }, {\n\t    key: 'loadStyleSheets',\n\t    value: function loadStyleSheets() {\n\t      var _this4 = this;\n\t\n\t      var scriptBaseUrl = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\t      var settings = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      if (settings.styles) {\n\t        settings.styles.forEach(function (name) {\n\t          return _this4.loadStyleSheet(_this4.buildPath(name, '.css', scriptBaseUrl, settings));\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'loadScripts',\n\t    value: function loadScripts() {\n\t      var _this5 = this;\n\t\n\t      var scriptBaseUrl = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\t      var settings = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      if (settings.scripts) {\n\t        settings.scripts.forEach(function (name) {\n\t          return _this5.loadScript(_this5.buildPath(name, '.js', scriptBaseUrl, settings));\n\t        });\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return AwsInitialiser;\n\t}();\n\n\texports.default = AwsInitialiser;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n\t* loglevel - https://github.com/pimterry/loglevel\r\n\t*\r\n\t* Copyright (c) 2013 Tim Perry\r\n\t* Licensed under the MIT license.\r\n\t*/\r\n\t(function (root, definition) {\r\n\t    \"use strict\";\r\n\t    if (typeof module === 'object' && module.exports && \"function\" === 'function') {\r\n\t        module.exports = definition();\r\n\t    } else if (true) {\r\n\t        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t    } else {\r\n\t        root.log = definition();\r\n\t    }\r\n\t}(this, function () {\r\n\t    \"use strict\";\r\n\t    var noop = function() {};\r\n\t    var undefinedType = \"undefined\";\r\n\t\r\n\t    function realMethod(methodName) {\r\n\t        if (typeof console === undefinedType) {\r\n\t            return false; // We can't build a real method without a console to log to\r\n\t        } else if (console[methodName] !== undefined) {\r\n\t            return bindMethod(console, methodName);\r\n\t        } else if (console.log !== undefined) {\r\n\t            return bindMethod(console, 'log');\r\n\t        } else {\r\n\t            return noop;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function bindMethod(obj, methodName) {\r\n\t        var method = obj[methodName];\r\n\t        if (typeof method.bind === 'function') {\r\n\t            return method.bind(obj);\r\n\t        } else {\r\n\t            try {\r\n\t                return Function.prototype.bind.call(method, obj);\r\n\t            } catch (e) {\r\n\t                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\r\n\t                return function() {\r\n\t                    return Function.prototype.apply.apply(method, [obj, arguments]);\r\n\t                };\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    // these private functions always need `this` to be set properly\r\n\t\r\n\t    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\r\n\t        return function () {\r\n\t            if (typeof console !== undefinedType) {\r\n\t                replaceLoggingMethods.call(this, level, loggerName);\r\n\t                this[methodName].apply(this, arguments);\r\n\t            }\r\n\t        };\r\n\t    }\r\n\t\r\n\t    function replaceLoggingMethods(level, loggerName) {\r\n\t        /*jshint validthis:true */\r\n\t        for (var i = 0; i < logMethods.length; i++) {\r\n\t            var methodName = logMethods[i];\r\n\t            this[methodName] = (i < level) ?\r\n\t                noop :\r\n\t                this.methodFactory(methodName, level, loggerName);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function defaultMethodFactory(methodName, level, loggerName) {\r\n\t        /*jshint validthis:true */\r\n\t        return realMethod(methodName) ||\r\n\t               enableLoggingWhenConsoleArrives.apply(this, arguments);\r\n\t    }\r\n\t\r\n\t    var logMethods = [\r\n\t        \"trace\",\r\n\t        \"debug\",\r\n\t        \"info\",\r\n\t        \"warn\",\r\n\t        \"error\"\r\n\t    ];\r\n\t\r\n\t    function Logger(name, defaultLevel, factory) {\r\n\t      var self = this;\r\n\t      var currentLevel;\r\n\t      var storageKey = \"loglevel\";\r\n\t      if (name) {\r\n\t        storageKey += \":\" + name;\r\n\t      }\r\n\t\r\n\t      function persistLevelIfPossible(levelNum) {\r\n\t          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\r\n\t\r\n\t          // Use localStorage if available\r\n\t          try {\r\n\t              window.localStorage[storageKey] = levelName;\r\n\t              return;\r\n\t          } catch (ignore) {}\r\n\t\r\n\t          // Use session cookie as fallback\r\n\t          try {\r\n\t              window.document.cookie =\r\n\t                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\r\n\t          } catch (ignore) {}\r\n\t      }\r\n\t\r\n\t      function getPersistedLevel() {\r\n\t          var storedLevel;\r\n\t\r\n\t          try {\r\n\t              storedLevel = window.localStorage[storageKey];\r\n\t          } catch (ignore) {}\r\n\t\r\n\t          if (typeof storedLevel === undefinedType) {\r\n\t              try {\r\n\t                  var cookie = window.document.cookie;\r\n\t                  var location = cookie.indexOf(\r\n\t                      encodeURIComponent(storageKey) + \"=\");\r\n\t                  if (location) {\r\n\t                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\r\n\t                  }\r\n\t              } catch (ignore) {}\r\n\t          }\r\n\t\r\n\t          // If the stored level is not valid, treat it as if nothing was stored.\r\n\t          if (self.levels[storedLevel] === undefined) {\r\n\t              storedLevel = undefined;\r\n\t          }\r\n\t\r\n\t          return storedLevel;\r\n\t      }\r\n\t\r\n\t      /*\r\n\t       *\r\n\t       * Public API\r\n\t       *\r\n\t       */\r\n\t\r\n\t      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\r\n\t          \"ERROR\": 4, \"SILENT\": 5};\r\n\t\r\n\t      self.methodFactory = factory || defaultMethodFactory;\r\n\t\r\n\t      self.getLevel = function () {\r\n\t          return currentLevel;\r\n\t      };\r\n\t\r\n\t      self.setLevel = function (level, persist) {\r\n\t          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\r\n\t              level = self.levels[level.toUpperCase()];\r\n\t          }\r\n\t          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\r\n\t              currentLevel = level;\r\n\t              if (persist !== false) {  // defaults to true\r\n\t                  persistLevelIfPossible(level);\r\n\t              }\r\n\t              replaceLoggingMethods.call(self, level, name);\r\n\t              if (typeof console === undefinedType && level < self.levels.SILENT) {\r\n\t                  return \"No console available for logging\";\r\n\t              }\r\n\t          } else {\r\n\t              throw \"log.setLevel() called with invalid level: \" + level;\r\n\t          }\r\n\t      };\r\n\t\r\n\t      self.setDefaultLevel = function (level) {\r\n\t          if (!getPersistedLevel()) {\r\n\t              self.setLevel(level, false);\r\n\t          }\r\n\t      };\r\n\t\r\n\t      self.enableAll = function(persist) {\r\n\t          self.setLevel(self.levels.TRACE, persist);\r\n\t      };\r\n\t\r\n\t      self.disableAll = function(persist) {\r\n\t          self.setLevel(self.levels.SILENT, persist);\r\n\t      };\r\n\t\r\n\t      // Initialize with the right level\r\n\t      var initialLevel = getPersistedLevel();\r\n\t      if (initialLevel == null) {\r\n\t          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\r\n\t      }\r\n\t      self.setLevel(initialLevel, false);\r\n\t    }\r\n\t\r\n\t    /*\r\n\t     *\r\n\t     * Package-level API\r\n\t     *\r\n\t     */\r\n\t\r\n\t    var defaultLogger = new Logger();\r\n\t\r\n\t    var _loggersByName = {};\r\n\t    defaultLogger.getLogger = function getLogger(name) {\r\n\t        if (typeof name !== \"string\" || name === \"\") {\r\n\t          throw new TypeError(\"You must supply a name when creating a logger.\");\r\n\t        }\r\n\t\r\n\t        var logger = _loggersByName[name];\r\n\t        if (!logger) {\r\n\t          logger = _loggersByName[name] = new Logger(\r\n\t            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\r\n\t        }\r\n\t        return logger;\r\n\t    };\r\n\t\r\n\t    // Grab the current global log variable in case of overwrite\r\n\t    var _log = (typeof window !== undefinedType) ? window.log : undefined;\r\n\t    defaultLogger.noConflict = function() {\r\n\t        if (typeof window !== undefinedType &&\r\n\t               window.log === defaultLogger) {\r\n\t            window.log = _log;\r\n\t        }\r\n\t\r\n\t        return defaultLogger;\r\n\t    };\r\n\t\r\n\t    return defaultLogger;\r\n\t}));\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar defaultAppId = exports.defaultAppId = 'ip';\n\t\n\t// appId's are associated with styling. Therefore you need to update the styles in kernel.scss if you want to change the appId's\n\tvar apps = exports.apps = [{\n\t  id: 'nw',\n\t  baseUrl: './index-nw.html'\n\t}, {\n\t  id: 'ip',\n\t  baseUrl: './index-ow.html#ng',\n\t  chrome: 'adviser'\n\t}];\n\t\n\tvar routeMap = exports.routeMap = [{\n\t  appId: 'nw',\n\t  match: {\n\t    pattern: '^#/app/investor',\n\t    modifier: ''\n\t  }\n\t}, {\n\t  appId: 'nw',\n\t  chrome: 'adviser',\n\t  match: {\n\t    pattern: '^#/app/adviser',\n\t    modifier: ''\n\t  }\n\t}, {\n\t  appId: 'ip',\n\t  chrome: 'adviser',\n\t  match: {\n\t    pattern: '^#ng|^#/ng',\n\t    modifier: ''\n\t  }\n\t}];\n\t\n\tvar cloudConfig = exports.cloudConfig = {\n\t  envParamUrl: '../../public/bootstrap/parameters.js',\n\t  cloudBaseUrl: 'https://d3jjhqujexdxuf.cloudfront.net',\n\t  cloudSettingsFilePath: 'kernel-settings.json',\n\t  setVersionParam: /setVerKernel=([a-z0-9\\-\\.\\/]+)/i\n\t};\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** kernel-init.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ca3b55a0305fb7453391\n **/","import AwsInitialiser from 'ui-salad/src/aws-initialiser'\nimport { cloudConfig } from 'config'\n\nconst log = require('loglevel').getLogger('ui-kernel-init')\n\nconst git = GIT_META || {}\nlog.info(`ui-kernel ${git.sha} (${git.branch})`)\n\nnew AwsInitialiser(window, cloudConfig).init()\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/init/main.js\n **/","import loglevel from 'loglevel';\n\nconst noop = () => {\n};\n\nexport default class AwsInitialiser {\n  constructor (win, config) {\n    this.$win = win;\n    this.$doc = win.document;\n    this.config = config;\n  }\n\n  init () {\n    const ts = new Date().getTime();\n    loglevel.info('Load bootstrap parameters from S3', this.config);\n    const settingsUrl = `${this.config.envParamUrl}?ts=${ts}`;\n    this.ajaxGet(settingsUrl, parameters => {\n      const pathParts = [];\n      pathParts.push(this.config.cloudBaseUrl);\n      const envPiece = this.$win.location.href.match(/setEnv=([a-z0-9]+)/i);\n      if (envPiece && envPiece.length >= 2) {\n        pathParts.push(envPiece[1]);\n      } else {\n        pathParts.push(parameters.formalEnvironmentName);\n      }\n\n      pathParts.push(this.config.cloudSettingsFilePath);\n\n      const scriptBasePath = pathParts.join('/');\n      this.ajaxGet(`${scriptBasePath}?ts=${ts}`, settings => {\n        this.loadStyleSheets(this.config.cloudBaseUrl, settings);\n        this.loadScripts(this.config.cloudBaseUrl, settings);\n      });\n    });\n  }\n\n  showGeneralError () {\n    const errorMsg = `<div class=\"response-message alert  message-alert-dynamic\" role=\"alert\" style=\"margin-top: 20px\">\n                        <span class=\"icon-container-outer\">\n                          <span class=\"icon-container default\">\n                              <span class=\"icon icon-notification-fail\" aria-hidden=\"true\"></span>\n                          </span>\n                        </span>\n                        <span class=\"message\"><p>We seem to be having some technical difficulties. Please reload this page or try again later.</p></span>\n                      </div>`;\n\n    const loadMsgBox = this.$win.document.getElementsByClassName('loading-message')[0];\n\n    if (loadMsgBox) {\n      loadMsgBox.innerHTML = errorMsg;\n    } else {\n      this.$win.alert(errorMsg);\n    }\n  }\n\n  ajaxGet (url, success = noop, error = () => { this.showGeneralError(); }) {\n    const request = new this.$win.XMLHttpRequest();\n    request.open('GET', url, true);\n    request.onload = () => {\n      if (request.status >= 200 && request.status < 400) {\n        let json;\n        try {\n          json = JSON.parse(request.responseText);\n        } catch (e) {\n          json = request.responseText.match(/\\{.+\\}/);\n          if (json) {\n            json = JSON.parse(json);\n          } else {\n            throw new Error(`Could not parse response: ${request.responseText}`);\n          }\n        }\n\n        success(json);\n      } else {\n        // We reached our target server, but it returned an error\n        error();\n      }\n    };\n\n    request.onerror = error;\n    request.send();\n  }\n\n  loadScript (src, callback = noop) {\n    loglevel.info('Load script from URL:', src);\n    const s = this.$doc.createElement('script');\n    s.src = src;\n    s.async = false;\n    s.onerror = () => this.showGeneralError();\n\n    let callbackComplete = false;\n    s.onreadystatechange = s.onload = () => {\n      const state = s.readyState;\n      if (!callbackComplete && (!state || /loaded|complete/.test(state))) {\n        callbackComplete = true;\n        callback();\n      }\n    };\n\n    this.$doc.body.appendChild(s);\n  }\n\n  buildPath (name, extension, scriptBaseUrl, settings) {\n    const pathParts = [];\n    const versionParam = this.$win.location.href.match(this.config.setVersionParam);\n\n    if (scriptBaseUrl) pathParts.push(scriptBaseUrl);\n\n    if (settings.path) {\n      if (versionParam && versionParam.length >= 2) {\n        settings.path = decodeURIComponent(versionParam[1]); // override version with pram value\n      }\n\n      pathParts.push(settings.path);\n    }\n\n    pathParts.push(`${name}${extension}`);\n\n    return pathParts\n        .map((p, i) => (i === 0\n            ? p.replace(/\\/+$/, '')\n            : p.replace(/^\\/+|\\/+$/g, '')))\n        .join('/');\n  }\n\n  loadStyleSheet (src) {\n    loglevel.info('Load style from URL:', src);\n    const styles = this.$doc.createElement('link');\n    styles.rel = 'stylesheet';\n    styles.href = src;\n    this.$doc.getElementsByTagName('head')[0].appendChild(styles);\n  }\n\n  loadStyleSheets(scriptBaseUrl = '', settings = {}) {\n    if (settings.styles) {\n      settings.styles.forEach((name) => this.loadStyleSheet(this.buildPath(name, '.css', scriptBaseUrl, settings)));\n    }\n  }\n\n  loadScripts (scriptBaseUrl = '', settings = {}) {\n    if (settings.scripts) {\n      settings.scripts.forEach(name => this.loadScript(this.buildPath(name, '.js', scriptBaseUrl, settings)));\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/ui-salad/src/aws-initialiser/index.js\n **/","/*\r\n* loglevel - https://github.com/pimterry/loglevel\r\n*\r\n* Copyright (c) 2013 Tim Perry\r\n* Licensed under the MIT license.\r\n*/\r\n(function (root, definition) {\r\n    \"use strict\";\r\n    if (typeof module === 'object' && module.exports && typeof require === 'function') {\r\n        module.exports = definition();\r\n    } else if (typeof define === 'function' && typeof define.amd === 'object') {\r\n        define(definition);\r\n    } else {\r\n        root.log = definition();\r\n    }\r\n}(this, function () {\r\n    \"use strict\";\r\n    var noop = function() {};\r\n    var undefinedType = \"undefined\";\r\n\r\n    function realMethod(methodName) {\r\n        if (typeof console === undefinedType) {\r\n            return false; // We can't build a real method without a console to log to\r\n        } else if (console[methodName] !== undefined) {\r\n            return bindMethod(console, methodName);\r\n        } else if (console.log !== undefined) {\r\n            return bindMethod(console, 'log');\r\n        } else {\r\n            return noop;\r\n        }\r\n    }\r\n\r\n    function bindMethod(obj, methodName) {\r\n        var method = obj[methodName];\r\n        if (typeof method.bind === 'function') {\r\n            return method.bind(obj);\r\n        } else {\r\n            try {\r\n                return Function.prototype.bind.call(method, obj);\r\n            } catch (e) {\r\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\r\n                return function() {\r\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    // these private functions always need `this` to be set properly\r\n\r\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\r\n        return function () {\r\n            if (typeof console !== undefinedType) {\r\n                replaceLoggingMethods.call(this, level, loggerName);\r\n                this[methodName].apply(this, arguments);\r\n            }\r\n        };\r\n    }\r\n\r\n    function replaceLoggingMethods(level, loggerName) {\r\n        /*jshint validthis:true */\r\n        for (var i = 0; i < logMethods.length; i++) {\r\n            var methodName = logMethods[i];\r\n            this[methodName] = (i < level) ?\r\n                noop :\r\n                this.methodFactory(methodName, level, loggerName);\r\n        }\r\n    }\r\n\r\n    function defaultMethodFactory(methodName, level, loggerName) {\r\n        /*jshint validthis:true */\r\n        return realMethod(methodName) ||\r\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\r\n    }\r\n\r\n    var logMethods = [\r\n        \"trace\",\r\n        \"debug\",\r\n        \"info\",\r\n        \"warn\",\r\n        \"error\"\r\n    ];\r\n\r\n    function Logger(name, defaultLevel, factory) {\r\n      var self = this;\r\n      var currentLevel;\r\n      var storageKey = \"loglevel\";\r\n      if (name) {\r\n        storageKey += \":\" + name;\r\n      }\r\n\r\n      function persistLevelIfPossible(levelNum) {\r\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\r\n\r\n          // Use localStorage if available\r\n          try {\r\n              window.localStorage[storageKey] = levelName;\r\n              return;\r\n          } catch (ignore) {}\r\n\r\n          // Use session cookie as fallback\r\n          try {\r\n              window.document.cookie =\r\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\r\n          } catch (ignore) {}\r\n      }\r\n\r\n      function getPersistedLevel() {\r\n          var storedLevel;\r\n\r\n          try {\r\n              storedLevel = window.localStorage[storageKey];\r\n          } catch (ignore) {}\r\n\r\n          if (typeof storedLevel === undefinedType) {\r\n              try {\r\n                  var cookie = window.document.cookie;\r\n                  var location = cookie.indexOf(\r\n                      encodeURIComponent(storageKey) + \"=\");\r\n                  if (location) {\r\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\r\n                  }\r\n              } catch (ignore) {}\r\n          }\r\n\r\n          // If the stored level is not valid, treat it as if nothing was stored.\r\n          if (self.levels[storedLevel] === undefined) {\r\n              storedLevel = undefined;\r\n          }\r\n\r\n          return storedLevel;\r\n      }\r\n\r\n      /*\r\n       *\r\n       * Public API\r\n       *\r\n       */\r\n\r\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\r\n          \"ERROR\": 4, \"SILENT\": 5};\r\n\r\n      self.methodFactory = factory || defaultMethodFactory;\r\n\r\n      self.getLevel = function () {\r\n          return currentLevel;\r\n      };\r\n\r\n      self.setLevel = function (level, persist) {\r\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\r\n              level = self.levels[level.toUpperCase()];\r\n          }\r\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\r\n              currentLevel = level;\r\n              if (persist !== false) {  // defaults to true\r\n                  persistLevelIfPossible(level);\r\n              }\r\n              replaceLoggingMethods.call(self, level, name);\r\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\r\n                  return \"No console available for logging\";\r\n              }\r\n          } else {\r\n              throw \"log.setLevel() called with invalid level: \" + level;\r\n          }\r\n      };\r\n\r\n      self.setDefaultLevel = function (level) {\r\n          if (!getPersistedLevel()) {\r\n              self.setLevel(level, false);\r\n          }\r\n      };\r\n\r\n      self.enableAll = function(persist) {\r\n          self.setLevel(self.levels.TRACE, persist);\r\n      };\r\n\r\n      self.disableAll = function(persist) {\r\n          self.setLevel(self.levels.SILENT, persist);\r\n      };\r\n\r\n      // Initialize with the right level\r\n      var initialLevel = getPersistedLevel();\r\n      if (initialLevel == null) {\r\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\r\n      }\r\n      self.setLevel(initialLevel, false);\r\n    }\r\n\r\n    /*\r\n     *\r\n     * Package-level API\r\n     *\r\n     */\r\n\r\n    var defaultLogger = new Logger();\r\n\r\n    var _loggersByName = {};\r\n    defaultLogger.getLogger = function getLogger(name) {\r\n        if (typeof name !== \"string\" || name === \"\") {\r\n          throw new TypeError(\"You must supply a name when creating a logger.\");\r\n        }\r\n\r\n        var logger = _loggersByName[name];\r\n        if (!logger) {\r\n          logger = _loggersByName[name] = new Logger(\r\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\r\n        }\r\n        return logger;\r\n    };\r\n\r\n    // Grab the current global log variable in case of overwrite\r\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\r\n    defaultLogger.noConflict = function() {\r\n        if (typeof window !== undefinedType &&\r\n               window.log === defaultLogger) {\r\n            window.log = _log;\r\n        }\r\n\r\n        return defaultLogger;\r\n    };\r\n\r\n    return defaultLogger;\r\n}));\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/loglevel/lib/loglevel.js\n ** module id = 2\n ** module chunks = 0\n **/","export const defaultAppId = 'ip'\n\n// appId's are associated with styling. Therefore you need to update the styles in kernel.scss if you want to change the appId's\nexport const apps = [\n  {\n    id: 'nw',\n    baseUrl: './index-nw.html'\n  },\n  {\n    id: 'ip',\n    baseUrl: './index-ow.html#ng',\n    chrome: 'adviser'\n  }\n]\n\nexport const routeMap = [\n  {\n    appId: 'nw',\n    match: {\n      pattern: '^#/app/investor',\n      modifier: ''\n    }\n  },\n  {\n    appId: 'nw',\n    chrome: 'adviser',\n    match: {\n      pattern: '^#/app/adviser',\n      modifier: ''\n    }\n  },\n  {\n    appId: 'ip',\n    chrome: 'adviser',\n    match: {\n      pattern: '^#ng|^#/ng',\n      modifier: ''\n    }\n  }\n]\n\nexport const cloudConfig = {\n  envParamUrl: '../../public/bootstrap/parameters.js',\n  cloudBaseUrl: 'https://d3jjhqujexdxuf.cloudfront.net',\n  cloudSettingsFilePath: 'kernel-settings.json',\n  setVersionParam: /setVerKernel=([a-z0-9\\-\\.\\/]+)/i\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ui-config/production.js\n **/"],"sourceRoot":""}