<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2008 rel. 2 (http://www.altova.com) by Gary Jacobs (BT Financial Group) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="ns://btfin.com/SharedServices/Integration/Common/Response/ErrorResponseType/V3" targetNamespace="ns://btfin.com/SharedServices/Integration/Common/Response/ErrorResponseType/V3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="1_0">
	<xs:element name="ErrorResponseType" type="ErrorResponseType"/>
	<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   -->
	<!--  Class: <<XSDcomplexType>> ErrorResponseType -->
	<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   -->
	<xs:complexType name="ErrorResponseType">
		<xs:annotation>
			<xs:documentation>Contains details of response depending on its type i.e. success or.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Code" type="ErrorCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Where: 
Sender ? indicates the cause of the error was attributable to the contents of the request
Receiver ? indicates the cause was attributable to things other than the contents of the request.
If absent indicates cause unknown.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubCode" type="SubCodeType">
				<xs:annotation>
					<xs:documentation>It provides an algorithmic mechanism for identifying the error.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="DescriptionType">
				<xs:annotation>
					<xs:documentation>A human readable string conveying the meaning of the Subcode.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Reason" type="ReasonType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>One or more strings giving additional information about the error. It is intended for humans to diagnose the problem. It should not be coded against as it could well change with implementation changes in the service.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="ErrorCodeType">
		<xs:annotation>
			<xs:documentation>Where: Sender ? indicates the cause of the error was attributable to the contents of the request. Receiver ? indicates the cause was attributable to things other than the contents of the request. If absent indicates cause unknown.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Sender"/>
			<xs:enumeration value="Receiver"/>
		</xs:restriction>
		<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   -->
		<!--  Class: <<enumeration>> ErrorCodeType -->
		<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   -->
	</xs:simpleType>
	<xs:simpleType name="SubCodeType">
		<xs:annotation>
			<xs:documentation>It provides a programmatic mechanism for classifying  the error. These must be defined by the service per operation. E.g. ServerUnavailable, ServerFailure, DataException.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
		</xs:restriction>
		<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   -->
		<!--  Class: <<enumeration>> SubCodeType -->
		<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   -->
	</xs:simpleType>
	<xs:simpleType name="DescriptionType">
		<xs:annotation>
			<xs:documentation>A human readable string conveying the meaning of the Subcode.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="50"/>
		</xs:restriction>
		<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   -->
		<!--  Class: <<enumeration>> DescriptionType -->
		<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   -->
	</xs:simpleType>
	<xs:simpleType name="ReasonType">
		<xs:annotation>
			<xs:documentation>One or more strings giving additional information about the error. It is intended for humans to diagnose the problem. It should not be coded against as it could well change with implementation changes in the service.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
		<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   -->
		<!--  Class: <<enumeration>> ReasonType -->
		<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   -->
	</xs:simpleType>
	<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   -->
	<!--  Class:StandardErrorResponseType -->
	<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   -->
	<xs:complexType name="StandardErrorResponseType">
		<xs:complexContent>
			<xs:restriction base="ErrorResponseType">
				<xs:sequence>
					<xs:element name="Code" type="ErrorCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Where: 
Sender  indicates the cause of the error was attributable to the contents of the request
Receiver  indicates the cause was attributable to things other than the contents of the request.
If absent indicates cause unknown.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SubCode">
						<xs:annotation>
							<xs:documentation>It provides an algorithmic mechanism for identifying the error.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="SubCodeType">
								<xs:enumeration value="DataException"/>
								<xs:enumeration value="ServerFailure"/>
								<xs:enumeration value="ServerNotResponding"/>
								<xs:enumeration value="ServerUnreachable"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="Description" type="DescriptionType">
						<xs:annotation>
							<xs:documentation>A human readable string conveying the meaning of the Subcode.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Reason" type="ReasonType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>One or more strings giving additional information about the error. It is intended for humans to diagnose the problem. It should not be coded against as it could well change with implementation changes in the service.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   -->
	<!--  Class: <<enumeration>> ResponseStatusTypeCode -->
	<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   -->
	<xs:simpleType name="ResponseStatusTypeCode">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Success"/>
			<xs:enumeration value="Warning"/>
			<xs:enumeration value="Error"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
